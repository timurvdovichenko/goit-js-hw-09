{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WAGLH,EACFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAGpBA,E,IAIP,IAAMQ,EAAO,CACXC,KAAMC,SAASC,cAAc,SAG/BH,EAAKC,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAGJN,EAAKC,KAAKM,iBAAiBC,UAAW,EAStC,IAPA,IAAgCC,EAAAJ,EAAIK,OAAOC,SAAnCC,EAAwBH,EAAxBjB,MAAOqB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAIjBC,EAAaH,EAAMI,cAAgBH,EAAKG,cAGnCC,EAAI,EAAGA,GAAKH,EAAOE,cAAeC,GAAK,EAC9CF,GAAcF,EAAKG,cACnB1B,EAAc2B,EAAGF,GACdG,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjB4B,QAAQC,IAAI,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,OAC1DJ,EAAAmC,OAAOC,QAAQ,uBAAwCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE9DiC,OAAM,SAAAN,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClB4B,QAAQC,IAAI,sBAAuCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,OACzDJ,EAAAmC,OAAOG,QAAQ,sBAAqCJ,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAIhEO,YAAW,WACTC,EAAKC,KAAKM,iBAAiBC,UAAW,C,GACrCO,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      // console.log(new Date());\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n\n  //disable button\n  refs.form.lastElementChild.disabled = true;\n\n  const { delay, step, amount } = evt.target.elements;\n\n  // console.log(new Date());\n  // set delay to create promises\n  let totalDelay = delay.valueAsNumber - step.valueAsNumber;\n\n  // cycle for create promises\n  for (let i = 1; i <= amount.valueAsNumber; i += 1) {\n    totalDelay += step.valueAsNumber;\n    createPromise(i, totalDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  // enable button until total timeout will pass\n  setTimeout(() => {\n    refs.form.lastElementChild.disabled = false;\n  }, totalDelay);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$refs","form","document","querySelector","addEventListener","evt","preventDefault","lastElementChild","disabled","_elements","target","elements","delay1","step","amount","totalDelay","valueAsNumber","i","then","param","console","log","concat","Notify","success","catch","failure"],"version":3,"file":"03-promises.258b771e.js.map"}