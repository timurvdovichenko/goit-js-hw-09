{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAGLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAG5BA,EAAM,G,CAIb,MAAMQ,EAAO,CACXC,KAAMC,SAASC,cAAc,SAG/BH,EAAKC,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAGJN,EAAKC,KAAKM,iBAAiBC,UAAW,EAEtC,MAAQhB,MAAAiB,EAAKC,KAAEA,EAAIC,OAAEA,GAAWN,EAAIO,OAAOC,SAI3C,IAAIC,EAAaL,EAAMM,cAAgBL,EAAKK,cAE5C,GAAIN,EAAMM,cAAgB,GAAKL,EAAKK,cAAgB,GAAKJ,EAAOI,eAAiB,EAE/E,YADA3B,EAAA4B,OAAOC,KAAK,6CAIZ,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAAOI,cAAeG,GAAK,EAC9CJ,GAAcJ,EAAKK,cACnBzB,EAAc4B,EAAGJ,GACdK,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjB4B,QAAQC,IAAI,uBAAqB9B,QAAiBC,OAClDJ,EAAA4B,OAAOM,QAAQ,uBAAqB/B,QAAiBC,MAAU,IAEhE+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClB4B,QAAQC,IAAI,sBAAoB9B,QAAiBC,OACjDJ,EAAA4B,OAAOQ,QAAQ,sBAAoBjC,QAAeC,MAAU,IAMpEO,YAAW,KACTC,EAAKC,KAAKM,iBAAiBC,UAAW,CAAK,GAC1CM,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      // console.log(new Date());\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n\n  //disable button\n  refs.form.lastElementChild.disabled = true;\n\n  const { delay, step, amount } = evt.target.elements;\n\n  // console.log(new Date());\n  // set delay to create promises\n  let totalDelay = delay.valueAsNumber - step.valueAsNumber;\n\n  if (delay.valueAsNumber < 0 || step.valueAsNumber < 0 || amount.valueAsNumber <= 0) {\n    Notify.info(`Please enter number greater or equal zero`);\n    return;\n  } else {\n    // cycle for create promises\n    for (let i = 1; i <= amount.valueAsNumber; i += 1) {\n      totalDelay += step.valueAsNumber;\n      createPromise(i, totalDelay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n\n  // enable button until total timeout will pass\n  setTimeout(() => {\n    refs.form.lastElementChild.disabled = false;\n  }, totalDelay);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$refs","form","document","querySelector","addEventListener","evt","preventDefault","lastElementChild","disabled","delay1","step","amount","target","elements","totalDelay","valueAsNumber","Notify","info","i","then","console","log","success","catch","failure"],"version":3,"file":"03-promises.8488a0fa.js.map"}